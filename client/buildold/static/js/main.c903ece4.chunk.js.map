{"version":3,"sources":["components/Navbar.js","data.js","components/TaskList.js","components/TaskEditor.js","components/SingleTask.js","utils/commonTools.js","components/TaskContainer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","appbar","background","menuButton","marginRight","spacing","toolbar","color","title","Navbar","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","auth","setAuth","_React$useState3","_React$useState4","anchorEl","setAnchorEl","open","Boolean","handleClose","react_default","a","createElement","className","AppBar","position","Toolbar","IconButton","aria-label","edge","Menu_default","FormGroup","FormControlLabel","control","Switch","checked","onChange","event","target","label","Typography","variant","aria-controls","aria-haspopup","onClick","currentTarget","AccountCircle_default","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","onClose","transformOrigin","MenuItem","tagOptions","value","progressOptions","priorityOptions","TaskList","inputProps","dist_default","columns","tasks","data","onRowClick","rowData","toggleTask","options","headerStyle","backgroundColor","rowStyle","actions","icon","tooltip","isFreeAction","alert","TaskEditor","_useState","inputContent","_useState2","editorContent","setContent","useEffect","document","concat","length","Fragment","type","getContent","ts","apiKey","process","REACT_APP_TINYMCE_API_KEY","initialValue","init","plugins","height","onEditorChange","changedContent","padding","submitButton","fontSize","fontWeight","iconSmall","button","display","marginTop","datePicker","margin","maxWidth","dropDown","minWidth","github","midSection","flexWrap","justifyContent","SingleTask","initialState","content","priority","progress","starred","startDate","startDateUnix","tags","targetDate","targetDateUnix","taskData","values","setValues","handleChange","name","objectSpread","handleDateChange","date","selectedDate","_objectSpread2","dateUnix","moment","unix","dateUnixKey","defineProperty","sanitizeValues","task","taskCopy","uuidv4","addID","Array","isArray","map","tag","join","material_ui_pickers_esm","utils","MomentUtils","Container","Paper","Radio","StarBorder","checkedIcon","Star","Tooltip","Button","console","log","newTask","axios","post","then","loadTasks","error","put","SendSharp","Delete","TextField","fullWidth","placeholder","style","select","option","key","animateYearScrolling","minDate","Date","now","maxDate","components_TaskEditor","react_select_browser_esm","allowCreateWhileLoading","createOptionPosition","formatCreateLabel","newTag","getNewOptionData","inputValue","optionLabel","__isNew__","isClearable","isMulti","isValidNewOption","includes","menuPlacement","split","paper","textAlign","palette","text","secondary","TaskContainer","field","cellStyle","render","find","format","selectedTask","state","setState","get","response","mapped","Items","original","formated","email","taskID","Grid","container","item","xs","components_TaskList","selectedRow","tableData","components_SingleTask","App","window","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c903ece4.chunk.js","sourcesContent":["// @flow\n\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport AppBar from '@material-ui/core/AppBar';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appbar: {\n    background: 'white',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    color: '#3ddb93',\n  },\n  title: {\n    flexGrow: 1,\n    color: '#3ddb93',\n  },\n}));\n\nexport default function Navbar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  function handleChange(event) {\n    setAuth(event.target.checked);\n  }\n\n  function handleLogout() {\n    setAuth(false);\n    setAnchorEl(null);\n  }\n\n  function handleMenu(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\" className={classes.appbar}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            aria-label=\"Menu\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            edge=\"start\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Switch\n                  aria-label=\"LoginSwitch\"\n                  checked={auth}\n                  onChange={handleChange}\n                />\n              }\n              label={auth ? 'Logout' : 'Login'}\n            />\n          </FormGroup>\n          <Typography className={classes.title} variant=\"h6\">\n            TaskR\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                aria-label=\"Account of current user\"\n                color=\"inherit\"\n                onClick={handleMenu}\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                id=\"menu-appbar\"\n                keepMounted\n                onClose={handleClose}\n                open={open}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","export const tagOptions = [\n  { value: 'abtesting', label: 'abtesting' },\n  { value: 'alpha', label: 'alpha' },\n  { value: 'analysis', label: 'analysis' },\n  { value: 'api', label: 'api' },\n  { value: 'application', label: 'application' },\n  { value: 'architecture', label: 'architecture' },\n  { value: 'backend', label: 'backend' },\n  { value: 'beta', label: 'beta' },\n  { value: 'blocked', label: 'blocked' },\n  { value: 'browser', label: 'browser' },\n  { value: 'bug', label: 'bug' },\n  { value: 'bugfix', label: 'bugfix' },\n  { value: 'cache', label: 'cache' },\n  { value: 'cicd', label: 'cicd' },\n  { value: 'cloud', label: 'cloud' },\n  { value: 'cms', label: 'cms' },\n  { value: 'crm', label: 'crm' },\n  { value: 'css', label: 'css' },\n  { value: 'cta', label: 'cta' },\n  { value: 'database', label: 'database' },\n  { value: 'deploy', label: 'deploy' },\n  { value: 'design', label: 'design' },\n  { value: 'devops', label: 'devops' },\n  { value: 'domain', label: 'domain' },\n  { value: 'feature', label: 'feature' },\n  { value: 'feedback', label: 'feedback' },\n  { value: 'fix', label: 'fix' },\n  { value: 'framework', label: 'framework' },\n  { value: 'frontend', label: 'frontend' },\n  { value: 'fullstack', label: 'fullstack' },\n  { value: 'growth', label: 'growth' },\n  { value: 'hotfix', label: 'hotfix' },\n  { value: 'html', label: 'html' },\n  { value: 'implementation', label: 'implmentation' },\n  { value: 'integration', label: 'integration' },\n  { value: 'interface', label: 'interface' },\n  { value: 'javascript', label: 'javascript' },\n  { value: 'loadtest', label: 'loadtest' },\n  { value: 'localization', label: 'localization' },\n  { value: 'material', label: 'material' },\n  { value: 'metric', label: 'metric' },\n  { value: 'mobile', label: 'mobile' },\n  { value: 'mockup', label: 'mockup' },\n  { value: 'monitoring', label: 'monitoring' },\n  { value: 'navigation', label: 'navigation' },\n  { value: 'optimization', label: 'optimization' },\n  { value: 'organization', label: 'organization' },\n  { value: 'patch', label: 'patch' },\n  { value: 'performance', label: 'performance' },\n  { value: 'platform', label: 'platform' },\n  { value: 'plugin', label: 'plugin' },\n  { value: 'portal', label: 'portal' },\n  { value: 'production', label: 'production' },\n  { value: 'react', label: 'react' },\n  { value: 'refactor', label: 'refactor' },\n  { value: 'route', label: 'route' },\n  { value: 'seed', label: 'seed' },\n  { value: 'seo', label: 'seo' },\n  { value: 'server', label: 'server' },\n  { value: 'service', label: 'service' },\n  { value: 'simulation', label: 'simulation' },\n  { value: 'syles', label: 'syles' },\n  { value: 'system', label: 'system' },\n  { value: 'task', label: 'task' },\n  { value: 'testing', label: 'testing' },\n  { value: 'ui', label: 'ui' },\n  { value: 'unittest', label: 'unittest' },\n  { value: 'update', label: 'update' },\n  { value: 'user', label: 'user' },\n  { value: 'ux', label: 'ux' },\n  { value: 'vm', label: 'vm' },\n  { value: 'wireframe', label: 'wireframe' },\n  { value: 'wish', label: 'wish' },\n];\n\nexport const progressOptions = [\n  {\n    value: 0,\n    label: 'None',\n  },\n  {\n    value: 1,\n    label: 'Planned',\n  },\n  {\n    value: 2,\n    label: 'In Progress',\n  },\n  {\n    value: 3,\n    label: 'Blocked',\n  },\n  {\n    value: 4,\n    label: 'Completed',\n  },\n];\n\nexport const priorityOptions = [\n  {\n    value: 0,\n    label: 'None',\n  },\n  {\n    value: 1,\n    label: 'Wish',\n  },\n  {\n    value: 2,\n    label: 'Low',\n  },\n  {\n    value: 3,\n    label: 'Medium',\n  },\n  {\n    value: 4,\n    label: 'High',\n  },\n];\n\nexport const exampleTasks = [\n  {\n    id: 'e29f01ce-ca0e-4ab1-8703-7ef078fe870a',\n    starred: true,\n    title: 'Example Task One',\n    content: `<p>Here is an example</p>\n    <p>We should have the app separated by authenticated and non-authenticated</p>\n    <ol>\n    <li>Create Auth and Unauth components</li>\n    <li>useContext to set as a provider to determine if user is authenticated/logged in</li>\n    <li>From top level in App.js, display authenticated or not based on this data</li>\n    </ol>\n    <p><strong>Once done, we can display either one with just a simple click for MVP</strong></p>\n    <p>Let's add some tags and we will separate them by commas for MVP</p>`,\n    progress: 2,\n    priority: 3,\n    startDate: 1562796120000,\n    targetDate: 1564610520000,\n    startDateUnix: 1562796120000,\n    targetDateUnix: 1564610520000,\n    tags: 'dev, example, mvp',\n  },\n  {\n    id: 'b4c1e3d5-cc33-4d36-a045-d87dfebc4602',\n    starred: false,\n    title: 'Example Task two',\n    content: `<p style=\"text-align: center;\">here is some fake content to task 2</p>\n    <p style=\"text-align: center;\">lets center it</p>\n    <p style=\"text-align: center;\"><em>COOL THING</em></p>`,\n    progress: 0,\n    priority: 2,\n    startDate: 1562796120000,\n    targetDate: 1573686120000,\n    startDateUnix: 1562796120000,\n    targetDateUnix: 1573686120000,\n    tags: 'serverless, dynamodb, fake, seed',\n  },\n  {\n    id: 'f9277ef1-1e19-4d15-bc92-232c42935ade',\n    starred: true,\n    title: 'Seperate authenticated and unathenticated three',\n    content: `<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n    <tbody>\n    <tr>\n    <td style=\"width: 33.3333%;\">here</td>\n    <td style=\"width: 33.3333%;\">is</td>\n    <td style=\"width: 33.3333%;\">a</td>\n    </tr>\n    <tr>\n    <td style=\"width: 33.3333%;\">three</td>\n    <td style=\"width: 33.3333%;\">by</td>\n    <td style=\"width: 33.3333%;\">four</td>\n    </tr>\n    <tr>\n    <td style=\"width: 33.3333%;\">table</td>\n    <td style=\"width: 33.3333%;\">inside</td>\n    <td style=\"width: 33.3333%;\">a</td>\n    </tr>\n    <tr>\n    <td style=\"width: 33.3333%;\">html</td>\n    <td style=\"width: 33.3333%;\">note</td>\n    <td style=\"width: 33.3333%;\">wow</td>\n    </tr>\n    </tbody>\n    </table>`,\n    progress: 1,\n    priority: 4,\n    startDate: 1562796120000,\n    targetDate: 1566338520000,\n    startDateUnix: 1562796120000,\n    targetDateUnix: 1566338520000,\n    tags: 'authenticated, unathenticated, context',\n  },\n  {\n    id: '74e0de93-2120-4e49-9b56-dccd9e21a642',\n    starred: false,\n    title: 'Reach router for App four',\n    content: `<p style=\"text-align: right;\">reach router task should be done soon</p>\n    <p style=\"text-align: right;\">please</p>\n    <p style=\"text-align: right;\">ok</p>`,\n    progress: 2,\n    priority: 4,\n    startDate: 1563487320000,\n    targetDate: 1565388120000,\n    startDateUnix: 1563487320000,\n    targetDateUnix: 1565388120000,\n    tags: 'react, router, reach',\n  },\n  {\n    id: 'ab5fcff0-d9b1-4338-9659-266f31302cce',\n    starred: false,\n    title: 'Get Authentication to work five',\n    content: `<ol>\n    <li>we need auth to work as well</li>\n    <li>maybe just a storage item for now</li>\n    <li>we also need to stop rendering each time</li>\n    <li>the editor changes</li>\n    </ol>`,\n    progress: 1,\n    priority: 3,\n    startDate: 1563660120000,\n    targetDate: 1565906520000,\n    startDateUnix: 1563660120000,\n    targetDateUnix: 1565906520000,\n    tags: 'auth, general',\n  },\n  {\n    id: 'd27599a6-ffca-4534-ba28-967626bcce86',\n    starred: true,\n    title: 'Finish this app six',\n    content: `<ul>\n    <li>lets finish</li>\n    <li>this app</li>\n    </ul>`,\n    progress: 2,\n    priority: 4,\n    startDate: 1563660120000,\n    targetDate: 1565388120000,\n    startDateUnix: 1563660120000,\n    targetDateUnix: 1565388120000,\n    tags: 'app, general, software, test, example, editor, auth',\n  },\n];\n","// @flow\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\n// import Button from '@material-ui/core/Button';\n\nfunction TaskList(inputProps) {\n  return (\n    <MaterialTable\n      title=\"Tasks\"\n      columns={inputProps.tasks.columns}\n      data={inputProps.tasks.data}\n      onRowClick={(event, rowData) => inputProps.toggleTask(rowData)}\n      options={{\n        headerStyle: {\n          backgroundColor: '#01579b',\n          color: '#FFF',\n        },\n        rowStyle: {\n          backgroundColor: '#EEE',\n        },\n      }}\n      actions={[\n        {\n          // icon: 'add',\n          icon: () => 'Create',\n          title: 'what',\n          tooltip: 'Add Task',\n          isFreeAction: true,\n          onClick: () => alert('You want to create a task'),\n        },\n      ]}\n    />\n  );\n}\n\nexport default TaskList;\n","// @flow\n\nimport { Editor } from '@tinymce/tinymce-react';\nimport React, { useState, useEffect } from 'react';\n\ntype InputPropsFlow = {\n  getContent: (content: string) => void,\n  inputContent: string,\n};\n\nfunction TaskEditor(inputProps: InputPropsFlow) {\n  const [editorContent, setContent] = useState(inputProps.inputContent);\n\n  useEffect(() => {\n    setContent(inputProps.inputContent);\n    document.title = `ICLength: ${inputProps.inputContent.length}`;\n  }, [inputProps.inputContent]);\n\n  const handleChange = changedContent => {\n    setContent(changedContent);\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => {\n          inputProps.getContent(editorContent);\n        }}\n      >\n        Save Content\n      </button>\n      <Editor\n        apiKey={process.env.REACT_APP_TINYMCE_API_KEY}\n        initialValue={editorContent}\n        init={{\n          plugins: 'link image code preview lists insertdatetime table',\n          toolbar:\n            // eslint-disable-next-line max-len\n            'preview | undo redo | bold italic | forecolor backcolor | alignleft aligncenter alignright | code | numlist bullist table insertdatetime',\n          height: 400,\n        }}\n        onEditorChange={handleChange}\n        value={editorContent}\n      />\n    </>\n  );\n}\nexport default TaskEditor;\n","// @flow\n\nimport axios from 'axios';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CreatableSelect from 'react-select/creatable';\nimport { Delete, SendSharp, Star, StarBorder } from '@material-ui/icons';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MomentUtils from '@date-io/moment';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {\n  addID,\n  convertTagsArray,\n  convertTagsStrings,\n} from '../utils/commonTools';\nimport { priorityOptions, progressOptions, tagOptions } from '../data';\nimport TaskEditor from './TaskEditor';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    backgroundColor: '#f5f5f5',\n  },\n  submitButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: 25,\n    fontWeight: 900,\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  datePicker: {\n    margin: theme.spacing(1),\n    maxWidth: 115,\n  },\n  dropDown: {\n    margin: theme.spacing(1),\n    minWidth: 150,\n  },\n  github: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  midSection: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n  },\n}));\n\nfunction SingleTask(inputProps) {\n  const initialState = {\n    id: '',\n    content: '',\n    github: '',\n    priority: 0,\n    progress: 0,\n    starred: false,\n    startDate: null,\n    startDateUnix: null,\n    tags: [],\n    targetDate: null,\n    targetDateUnix: null,\n    title: '',\n  };\n  const classes = useStyles();\n  const [values, setValues] = useState(inputProps.taskData);\n\n  useEffect(() => {\n    setValues(inputProps.taskData);\n  }, [inputProps.taskData]);\n\n  const handleChange = (name: string) => (\n    event: SyntheticInputEvent<EventTarget>,\n  ) => {\n    if (name === 'starred') {\n      setValues({ ...values, starred: !values.starred });\n    } else if (name === 'title') {\n      setValues({ ...values, title: event.target.value });\n    } else if (name === 'progress') {\n      setValues({ ...values, progress: event.target.value });\n    } else if (name === 'priority') {\n      setValues({ ...values, priority: event.target.value });\n    } else if (name === 'github') {\n      setValues({ ...values, github: event.target.value });\n    }\n  };\n\n  const handleGetContent = content => {\n    setValues({ ...values, content });\n  };\n\n  const handleDateChange = (date: string) => (selectedDate: string) => {\n    const dateUnix = moment(selectedDate).unix() * 1000;\n    const dateUnixKey = `${date}Unix`;\n    setValues({ ...values, [date]: selectedDate, [dateUnixKey]: dateUnix });\n  };\n\n  const sanitizeValues = task => {\n    let taskCopy = { ...task };\n    if (task.id === '') {\n      taskCopy = addID(taskCopy);\n    }\n    taskCopy.tags = convertTagsArray(task.tags);\n    return taskCopy;\n  };\n\n  const handleSubmit = () => {\n    console.log('submitted..');\n    const data = sanitizeValues(values);\n    if (data.newTask) {\n      console.log('new task');\n      axios.post('http://localhost:3000/addtask', data).then(\n        () => {\n          inputProps.loadTasks();\n        },\n        error => {\n          console.log(error);\n        },\n      );\n    } else if (!data.newTask) {\n      console.log('update exisiting task');\n      axios.put('http://localhost:3000/updatetask', data).then(\n        () => {\n          inputProps.loadTasks();\n        },\n        error => {\n          console.log(error);\n        },\n      );\n    }\n  };\n\n  const handleClearTask = () => {\n    setValues({ ...initialState });\n  };\n\n  const handleTag = tag => {\n    if (tag === null) {\n      setValues({ ...values, tags: [] });\n    } else {\n      setValues({ ...values, tags: tag });\n    }\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <Container className=\"Task\">\n        <Paper className={classes.root}>\n          <AppBar position=\"static\" color=\"default\">\n            <Toolbar>\n              <Radio\n                checked={Boolean(values && values.starred)}\n                onClick={handleChange('starred')}\n                icon={<StarBorder />}\n                checkedIcon={<Star />}\n                name=\"starred\"\n              />\n              <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.title}\n              >\n                {values && values.title && values.title.length\n                  ? values.title\n                  : 'Create Task'}\n              </Typography>\n              <Tooltip title=\"Save Task\">\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submitButton}\n                  onClick={handleSubmit}\n                >\n                  <SendSharp className={classes.iconSmall} />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"Clear Task\">\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={handleClearTask}\n                >\n                  <Delete className={classes.iconSmall} />\n                </Button>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n          <TextField\n            error={values && !!(values.title && values.title.length < 1)}\n            fullWidth\n            id=\"title\"\n            label=\"Title\"\n            onChange={handleChange('title')}\n            placeholder=\"Title...\"\n            style={{ margin: 8 }}\n            value={values && values.title}\n          />\n          <div className={classes.midSection}>\n            <TextField\n              className={classes.dropDown}\n              id=\"progress\"\n              label=\"Progress\"\n              onChange={handleChange('progress')}\n              select\n              value={values && values.progress}\n              variant=\"outlined\"\n            >\n              {progressOptions.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              className={classes.dropDown}\n              id=\"priority\"\n              label=\"Priority\"\n              onChange={handleChange('priority')}\n              select\n              value={values && values.priority}\n              variant=\"outlined\"\n            >\n              {priorityOptions.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            <DatePicker\n              animateYearScrolling\n              className={classes.datePicker}\n              label=\"Start Date\"\n              minDate={Date.now()}\n              maxDate={\n                values && values.targetDate\n                  ? values.targetDate\n                  : moment('9999-01-01')\n              }\n              onChange={handleDateChange('startDate')}\n              value={values && values.startDate}\n            />\n            <DatePicker\n              animateYearScrolling\n              className={classes.datePicker}\n              label=\"Target Date\"\n              minDate={\n                values && values.startDate ? values.startDate : Date.now()\n              }\n              onChange={handleDateChange('targetDate')}\n              value={values && values.targetDate}\n            />\n            <TextField\n              className={classes.github}\n              id=\"github\"\n              label=\"Github\"\n              onChange={handleChange('github')}\n              placeholder=\"Github link...\"\n              value={values && values.github}\n            />\n          </div>\n          <TaskEditor\n            getContent={handleGetContent}\n            inputContent={(values && values.content) || ''}\n          />\n          <CreatableSelect\n            allowCreateWhileLoading={false}\n            createOptionPosition=\"last\"\n            formatCreateLabel={newTag => `Add ${newTag}..`}\n            getNewOptionData={(inputValue, optionLabel) => ({\n              label: optionLabel,\n              value: inputValue,\n              __isNew__: true,\n            })}\n            isClearable\n            isMulti\n            isValidNewOption={value => !value.includes(' ')}\n            menuPlacement=\"auto\"\n            onChange={handleTag}\n            options={tagOptions}\n            placeholder=\"Enter tags...\"\n            value={\n              (values && values.tags && convertTagsStrings(values.tags)) || []\n            }\n          />\n        </Paper>\n      </Container>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default SingleTask;\n","// @flow\n\nimport uuidv4 from 'uuid/v4';\n\nexport function convertTagsArray(\n  tags: Array<{ label: String, value: string }>,\n): string {\n  if (!Array.isArray(tags)) {\n    return tags;\n  }\n  return tags.map(tag => tag.value).join(', ');\n}\n\nexport function convertTagsStrings(\n  tags: string,\n): Array<{ label: string, value: string }> {\n  if (Array.isArray(tags)) {\n    return tags;\n  }\n  const tagArray = tags.split(', ');\n  return tagArray.map(tag => {\n    return {\n      label: tag,\n      value: tag,\n    };\n  });\n}\n\nexport function addID(task) {\n  const taskCopy = { ...task };\n  taskCopy.id = uuidv4();\n  return taskCopy;\n}\n","// @flow\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport moment from 'moment';\nimport { Star, StarBorder } from '@material-ui/icons';\nimport { priorityOptions, progressOptions } from '../data';\nimport TaskList from './TaskList';\nimport SingleTask from './SingleTask';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function TaskContainer() {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    columns: [\n      {\n        title: 'Star',\n        field: 'starred',\n        type: 'boolean',\n        cellStyle: {\n          backgroundColor: 'grey',\n          color: 'blue',\n        },\n        render: rowData =>\n          rowData && rowData.starred ? <Star /> : <StarBorder />,\n      },\n      { title: 'Title', field: 'title' },\n      {\n        title: 'Progress',\n        field: 'progress',\n        type: 'numeric',\n        render: rowData => (\n          <p>\n            {rowData &&\n              rowData.progress &&\n              progressOptions.find(option => option.value === rowData.progress)\n                .label}\n          </p>\n        ),\n      },\n      {\n        title: 'Priority',\n        field: 'priority',\n        type: 'numeric',\n        render: rowData => (\n          <p>\n            {rowData &&\n              rowData.priority &&\n              priorityOptions.find(option => option.value === rowData.priority)\n                .label}\n          </p>\n        ),\n      },\n      {\n        title: 'Start Date',\n        field: 'startDateUnix',\n        type: 'datetime',\n        render: rowData => (\n          <p>{moment(rowData.startDateUnix).format('M/D/YY')}</p>\n        ),\n      },\n      {\n        title: 'Target Date',\n        field: 'targetDateUnix',\n        type: 'datetime',\n        render: rowData => (\n          <p>{moment(rowData.targetDateUnix).format('M/D/YY')}</p>\n        ),\n      },\n      {\n        title: 'Tags',\n        field: 'tags',\n        type: 'string',\n      },\n    ],\n    data: [],\n    selectedTask: 0,\n  });\n\n  const loadTasks = () => {\n    axios.get('http://localhost:3000/dynamomulti').then(\n      response => {\n        const { Items } = response.data;\n        const mapped = Items.map(original => {\n          const formated = {\n            ...original.task,\n          };\n          formated.email = original.email;\n          formated.taskID = original.taskID;\n          formated.newTask = false;\n          return formated;\n        });\n        setState({ ...state, data: mapped });\n      },\n      error => {\n        console.log(error);\n      },\n    );\n  };\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  const toggleTask = data => {\n    const selectedRow = data.tableData.id;\n    setState({ ...state, selectedTask: selectedRow });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            <TaskList tasks={state} toggleTask={toggleTask} />\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            <SingleTask\n              taskData={state.data[state.selectedTask]}\n              loadTasks={loadTasks}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","// @flow\n\nimport './App.css';\nimport React from 'react';\n// import Homepage from './components/Homepage';\nimport Navbar from './components/Navbar';\nimport TaskContainer from './components/TaskContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      {/* <Homepage /> */}\n      <TaskContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}